package com.app.vacancyportal.util;

import java.util.Properties;

import javax.servlet.Registration;

import org.hibernate.SessionFactory;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;
import org.hibernate.cfg.Environment;
import org.hibernate.service.ServiceRegistry;

import com.app.vacancyportal.entity.ProfilePicture;
import com.app.vacancyportal.entity.Role;
import com.app.vacancyportal.entity.UserDetail;
import com.app.vacancyportal.entity.Vacancy;

public class HibernateUtil {
	private static SessionFactory sessionFactory;

	public static SessionFactory getSessionFactory() {

		if (sessionFactory == null) {
			Configuration configuration = new Configuration();
			Properties properties = new Properties();
			properties.setProperty("hibernate.connection.url", "jdbc:mysql://localhost:3306/jobvacancydb");
			properties.setProperty("hibernate.connection.driver_class", "com.mysql.cj.jdbc.Driver");
			properties.setProperty(Environment.DIALECT, "org.hibernate.dialect.MySQLDialect");
			properties.setProperty("hibernate.connection.username", "root");
			properties.setProperty("hibernate.connection.password", "admin");
			properties.setProperty(Environment.SHOW_SQL, "true");
			properties.setProperty(Environment.CURRENT_SESSION_CONTEXT_CLASS, "thread");
			properties.setProperty(Environment.HBM2DDL_AUTO, "update");

			
			configuration.addClass(annotations.Registration.class)
			configuration.setProperties(properties);
			configuration.addAnnotatedClass(Registration.class);
			configuration.addAnnotatedClass(UserDetail.class);
			configuration.addAnnotatedClass(Role.class);
			configuration.addAnnotatedClass(Vacancy.class);
			configuration.addAnnotatedClass(ProfilePicture.class);
			
			configuration.configure();

			ServiceRegistry serviceRegistry = new StandardServiceRegistryBuilder()
					.applySettings(configuration.getProperties()).build();
			sessionFactory = configuration.buildSessionFactory(serviceRegistry);
			

		}
		return sessionFactory;

	}
	
	  public static void shutdown() {
	        if (sessionFactory != null) {
	            sessionFactory.close();
	        }
	    }

}
